// <auto-generated />
using System;
using KACCloudContextLibrary.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KACWebAPI.Migrations
{
    [DbContext(typeof(KACCloudContext))]
    [Migration("20230407075420_add_ruolo")]
    partial class addruolo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("KACCloudContextLibrary.Domain.Entity.AnagraficaCloud", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uuid");

                    b.Property<string>("CodiceFiscale")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("LastEditDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Anagrafiche", (string)null);
                });

            modelBuilder.Entity("KACCloudContextLibrary.Domain.Entity.Ruolo", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uuid");

                    b.Property<int?>("Abilitazione")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("LastEditDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Ruoli", (string)null);
                });

            modelBuilder.Entity("KACCloudContextLibrary.Domain.Entity.Utente", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uuid");

                    b.Property<string>("Cognome")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("LastEditDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<Guid>("RuoloID")
                        .HasColumnType("uuid");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("RuoloID");

                    b.ToTable("Utenti", (string)null);
                });

            modelBuilder.Entity("KACCloudContextLibrary.Domain.Entity.Utente", b =>
                {
                    b.HasOne("KACCloudContextLibrary.Domain.Entity.Ruolo", "Ruolo")
                        .WithMany("Utenti")
                        .HasForeignKey("RuoloID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Ruolo");
                });

            modelBuilder.Entity("KACCloudContextLibrary.Domain.Entity.Ruolo", b =>
                {
                    b.Navigation("Utenti");
                });
#pragma warning restore 612, 618
        }
    }
}
